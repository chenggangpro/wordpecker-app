version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    hostname: wordpecker-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: wordpecker
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - wordpecker-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  backend:
    image: wordpecker-app-backend:latest
    hostname: wordpecker-backend
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/wordpecker?authSource=admin
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - PEXELS_API_KEY=${PEXELS_API_KEY}
    volumes:
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - wordpecker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://wordpecker-backend:3000/api/lists"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  frontend:
    image: wordpecker-app-frontend:latest
    hostname: wordpecker-frontend
    restart: unless-stopped
    environment:
      API_PORTAL: wordpecker-backend:3000
      PROTOCOL: http
    ports:
      - "80:80"
    volumes:
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - wordpecker-network
volumes:
  mongodb_data:
networks:
  wordpecker-network:
    driver: overlay